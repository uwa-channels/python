name: CI

on: 
  workflow_dispatch:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Unit test
        run: |
          pip install pytest pytest-cov
          PYTHONPATH=src pytest --cov --cov-report xml:coverage.xml

      # - name: Smoke test
      #   run: |
      #     pip install -r requirements.txt
      #     PYTHONPATH=src python examples/example.py

      - uses: codecov/codecov-action@v4
        if: matrix.python-version == '3.13'
        with:
          file: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4

      - name: Install build dependencies
        run: pip install build twine

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
